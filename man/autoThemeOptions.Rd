% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/render-plot.R
\name{autoThemeOptions}
\alias{autoThemeOptions}
\title{Plot auto theming options}
\usage{
autoThemeOptions(
  bg = NULL,
  fg = NULL,
  accent = NULL,
  qualitative = NULL,
  sequential = NULL
)
}
\arguments{
\item{bg}{background color. Defaults to the background color of the containing
HTML element.}

\item{fg}{foreground color. Defaults to the foreground color of the containing
HTML element.}

\item{accent}{color for making certain graphical markers 'stand out'
(e.g., the fitted line color for \code{\link[ggplot2:geom_smooth]{ggplot2::geom_smooth()}}).
Defaults to the hyperlink color (inside the containing HTML element).
Can be of length 2 for lattice graphics.}

\item{qualitative}{color palette for discrete variables.
Defaults to the Okabe-Ito colorscale (won't be used in ggplot2 when
the number of data levels exceeds the max allowed colors).}

\item{sequential}{color palette for numeric variables.
Defaults to a gradient based on \code{accent} color.}
}
\description{
Create a list of options for passing to \code{\link[=renderPlot]{renderPlot()}}'s \code{autoTheme}
argument (either directly or through \code{\link[=shinyOptions]{shinyOptions()}}' \code{plot.autotheme}).
This function helps you:
\enumerate{
\item Override auto-theming defaults, which is especially useful for
specifying a \code{qualitative} and/or \code{sequential} color palette.
\item Opt-out of specific auto-theming features (by supplying \code{NA} to specific
option(s)).
}
}
\examples{
opts <- autoThemeOptions(accent = "red", sequential = NA)
shinyOptions(plot.autotheme = opts)

if (interactive()) {
  shinyApp(
    fluidPage(
      tags$style(HTML("body {background-color: black; color: white}")),
      plotOutput("p")
    ),
    function(input, output) {
      output$p <- renderPlot({
        ggplot(mtcars, aes(wt, mpg)) +
          geom_point(aes(color = mpg)) +
          geom_smooth()
      })
    }
  )
}

}
